0.数据结构
1.1基本的数据结构：字符串,向量与列表(栈和队列),
1.1高级的数据结构：二叉树的表示(二叉搜索树（平衡二叉搜索树（AVL，伸展树，红黑树））,B树（2-3查找树）,Kd树等),图,词典（散列表）,优先队列(堆),


1.排序：
1.1冒泡排序
1.2快速排序
1.3插入排序
1.4希尔排序
1.5选择排序
1.6堆排序
1.7归并排序
1.8桶排序
1.9基数排序
1.10计数排序


2.查找：
2.1顺序查找
2.2二分查找
2.3插值查找
2.4斐波那契查找 
2.5数表查找
2.6哈希查找
2.7线性索引查找 


3.图：
3.1广度优先
3.2深度优先
3.3双向广度优先
3.4优先级搜索
3.5最小生成树
3.6最短路径算法(Dijkstra  Bellman-Ford Floyd-Warshall)
3.7A*
3.8图匹配
3.9强连通分支


4.串：
4.1字符串处理（转换为整数）
4.2单词查找（AC机）
4.3字符串匹配(KMP）
4.4字符串Hash
4.5字符串dp

5 算法设计：
5.1 递归与分治：阶乘函数 斐波那契数列 全排列问题  整数划分 汉诺塔  二分查找  Matrix(Strassen) 
排序（合并 快排） 棋盘覆盖 最近点对 循环赛日程表 Subsequences
5.2 动态规划：BackPack Subsequences  Matrix  数塔问题(?) 凸多边形最优三角剖分 最优二叉搜索树
双调欧几里得旅行商问题
5.3 贪心算法：BackPack 活动选择问题 Huffman编码 单源最短路径问题 最小生成树问题 钱币找零问题 多机调度问题 
小船过河问题 区间覆盖问题 销售比赛 
5.4 回溯算法：
5.5 分支限界：

6.算法分析
6.1数学归纳法
6.2概率分析
6.3摊还分析