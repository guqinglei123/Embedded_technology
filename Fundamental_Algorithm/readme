0.数据结构
0.1线性结构：向量与列表(栈和队列)
0.2半线性结构：二叉树，二叉搜索树（AVL，伸展树，红黑树），平衡树（B树（2-3查找树），B+树），平衡二叉搜索树（AVL，伸展树，红黑树），Kd树，字典树，空间数据分割树
0.3图（邻接矩阵，邻接表）
0.4词典（散列（hash）表）
0.5优先队列(堆)
0.6字符串


1.排序：
1.1冒泡排序
1.2快速排序
1.3插入排序
1.4希尔排序
1.5选择排序
1.6堆排序
1.7归并排序
1.8桶排序
1.9基数排序
1.10计数排序


2.查找：
2.1顺序查找
2.2二分查找
2.3插值查找
2.4斐波那契查找 
2.5数表查找
2.6哈希查找
2.7线性索引查找 


3.图：
3.1广度优先
3.2深度优先
3.3双向广度优先
3.4拓扑排序(有向图环路检测，无向图环路检测(Union-Find))
3.5强/双连通分支(Kosaraju)
3.6优先级搜索
3.7最小生成树(prim kruskal)
3.8最短路径算法(Dijkstra  Bellman-Ford Floyd-Warshall johnson)
3.9A*
3.10图匹配（匈牙利算法）
3.11最大流算法（Ford-Fulkerson）



4.串：
4.1字符串处理（字符串字符判重算法，字符串反转算法，字符串左旋算法，字符串右旋算法，字符串旋转匹配算法，字符串包含算法，字符串删除算法，字符串原地替换算法，字符串压缩算法，字符串变位词检测算法，字符串转整数算法，字符串全排列算法，字符串字典序组合算法，字符串的括号生成算法)
4.2字符串排序
4.3单词查找
4.4字符串匹配(的字符串匹配算法（Naive String Matching Algorithm），KMP，Boyer-Moore 字符串匹配算法，AC自动机，有限自动机算法（Finite Automation），后缀树）


5 算法设计：
5.1 递归与分治：阶乘函数 斐波那契数列 全排列问题  整数划分 汉诺塔  二分查找  Matrix(Strassen) 排序（合并 快排） 棋盘覆盖 最近点对 循环赛日程表 Subsequences
5.2 动态规划：BackPack Subsequences  Matrix  数塔问题(?) 凸多边形最优三角剖分 最优二叉搜索树 双调欧几里得旅行商问题
5.3 贪心算法：BackPack 活动选择问题 Huffman编码 单源最短路径问题 最小生成树问题 钱币找零问题 多机调度问题 小船过河问题 区间覆盖问题 销售比赛 
5.4 回溯算法：矩阵路径,机器人运动范围,八皇后,正方体的八个顶点,全排列问题（重复与无重复）,子集问题（重复与无重复），字符串的（括号）生成算法，电话号码的字母组合
5.5 分支限界：

6.算法分析
6.1数学归纳法
6.2概率分析
6.3摊还分析