参看书籍:
<linux设备驱动程序>　第6章
<linux设备驱动发——基于最新的linux 4.0内核＞　 第8章
<深入理解linux内核>　第13章
主要内容：
１．IIＣ协议介绍
	简述：串行，同步(同步通信是一种连续串行传送数据的通信方式，一次通信只传送一帧信息,这里一帧信息中包含若干字节.要求接受端和发送端的时钟频率一样， 可使用于点对多点)，多主机，8位传输，半双工（如果一个时间可以从A到B，然后下一时间从B到A，但是不能同时双向）。
	接口：SDA – 数据传输     SCL-时钟线
	主机(初始化发送，产生时钟信号和终止发送的器件)发送：
		（1）主机在检测到总线为“空闲状态”（即 SDA、SCL 线均为高电平）时，发送一个启动信号“S”，开始一次通信的开始
		（2）主机接着发送一个命令字节。该字节由 7 位的外围器件地址和 1 位读写控制位 R/W组成（此时 R/W=0）
		（3）相对应的从机收到命令字节后向主机回馈应答信号 ACK（ACK=0）
		（4）主机收到从机的应答信号后开始发送第一个字节的数据
		（5）从机收到数据后返回一个应答信号 ACK
		（6）主机收到应答信号后再发送下一个数据字节
		（7）当主机发送最后一个数据字节并收到从机的 ACK 后，通过向从机发送一个停止信号P结束本次通信并释放总线。从机收到P信号后也退出与主机之间的通信
	主机接收:
		（1）主机发送启动信号后，接着发送命令字节（其中 R/W=1）
		（2）对应的从机收到地址字节后，返回一个应答信号并向主机发送数据
		（3）主机收到数据后向从机反馈一个应答信号
		（4）从机收到应答信号后再向主机发送下一个数据 
		（5）当主机完成接收数据后，向从机发送一个“非应答信号（ACK=1）”，从机收到ASK=1 的非应答信号后便停止发送
		（6）主机发送非应答信号后，再发送一个停止信号，释放总线结束通信	
	主机仲裁：低电平优先		
2.IIＣ子系统模型
