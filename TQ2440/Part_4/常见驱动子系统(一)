参看书籍:

    <linux设备驱动程序>　第6章
    <linux设备驱动开发——基于最新的linux 4.0内核＞　 第8章
    <深入理解linux内核>　第13章


一：misc设备(字符设备)

    主要内容：
    实验过程：
    设计一个msci的按键


二：终端设备(字符驱动)

    主要内容：
    １．串口协议介绍
        简述：串行，异步(异步通信在发送字符时，所发送的字符之间的时间间隔可以是任意的。当然，接收端必须时刻做好接收的准备。发送端可以在任意时刻开始发送字符，因此必须在每一个字符的开始和结束的地方加上标志，即加上开始位和停止位，以便使接收端能够正确地将每一个字符接收下来，仅适用于点对点)，1位传输，半双工(RS485)或者全双工(RS232)。
        接口：TX – 发送数据，RX – 接受数据
        数据发送：
            当启动字节发送时，通过TxD先发起始位，然后发数据位和奇偶数校验位，最后再发停止位，发送过程由发送状态机控制，每次中断只发送1个位，经过若干个定时中断完成1个字节帧的发送。
        数据接收：
            当不在字节帧接收过程时，每次定时中断以3倍的波特率监视RxD的状态，当其连续3次采样电平依次为1、0、0时，就认为检测到了起始位，则开始启动一次字节帧接收，字节帧接收过程由接收状态机控制，每次中断只接收1个位，经过若干个定时中断完成1个字节帧的接收。
        串行通信接口标准:USB(USB电平)、RS-232、RS422、RS-485 （控制器默认出来的电平为TTL）
    ２．tty子系统模型

三：ＲＴＣ设备(字符驱动)


四：输入设备(字符驱动)

    主要内容：
    １．输入子系统模型(linux-2.6.39/drivers/input/keyboard/gpio_keys.c)
    ２．触摸屏模型（linux-2.6.39/drivers/input/touchscreen/s3c2410_ts.c）


    实验过程:
    １.将原始的按键程序中的msci设备模型改为输入子系统模型
    ２．触摸屏程序设计
五：Framebuffer设备(字符驱动)

    主要内容: 
    １.帧缓存架构(linux-2.6.39/drivers/video/fbmem.c)
    ２.LCD驱动程序分析(linux-2.6.39/drivers/video/s3c2410fb.c)

        LCD初始化:控制寄存器初始化，端口初始化，指明了帧缓冲

        LCD的图形显示:将图形数据写入帧缓冲　

        屏幕参数:尺寸４.7寸，分辨率480*272,位深16位

    实验过程：
    LCD驱动模型的设计
六：MTD驱动模型／内存设备（字符设备和块设备）

    主要内容
    １.MTD子系统架构
    ２.MTD的使用
        linux配置中要设置MTD的选项
    ３.nandflash程序设计    

    实验过程：
    nandflash程序设计(linux-2.6.39/drivers/mtd/nand/s3c2410.c)

七：ＭＭＣ驱动模型／ＳＤ卡设备
